Add that user to the docker group:
sudo usermod -aG docker jenkins
Restart Jenkins (important!):
sudo systemctl restart Jenkins
sudo -u jenkins docker images

================================
Jenkins Setup Guide for Docker Hub Integration
Prerequisites Setup
1. Docker Hub Credentials Setup in Jenkins

Navigate to Jenkins Dashboard

Go to: Manage Jenkins → Manage Credentials


Add Docker Hub Credentials

Click (global) → Add Credentials
Kind: Username with password
Username: farajassulai
Password: [Your Docker Hub Password/Token]
ID: dockerhub-credentials
Description: Docker Hub credentials for farajassulai



2. GitHub Integration Setup

GitHub Webhook Configuration

Go to your GitHub repository: https://github.com/mcsredhat/Jenkins
Navigate to Settings → Webhooks → Add webhook
Payload URL: http://your-jenkins-server:8080/github-webhook/
Content type: application/json
Events: Select Just the push event


GitHub Credentials (Optional for private repos)

In Jenkins: Manage Jenkins → Manage Credentials
Kind: Username with password or SSH Username with private key
ID: github-credentials



3. Jenkins Pipeline Job Configuration


Step 1: Create New Pipeline Job

Click "New Item" on the left sidebar
Enter item name: node-js-pipeline (or your preferred name)
Select "Pipeline" as the project type
Click "OK"

Step 2: Configure Pipeline Settings
General Settings

Description: Enter a description like "Node.js application CI/CD pipeline"
GitHub project: Check this box and enter: https://github.com/mcsredhat/Jenkins/

Build Triggers (Optional)

GitHub hook trigger for GITScm polling: Check this for automatic builds on git push
Poll SCM: Check this and set schedule (e.g., H/5 * * * * for every 5 minutes)

Pipeline Configuration

Definition: Select "Pipeline script from SCM"
SCM: Select "Git"
Repository URL: Enter https://github.com/mcsredhat/Jenkins.git
Credentials:

If public repo: Leave as "none"
If private repo: Add GitHub credentials


Branch Specifier: */main (or your default branch)
Script Path: node-js/Jenkinsfile


Step 4: Required Plugins Installation
If not already installed, go to "Manage Jenkins" → "Manage Plugins" and install:

Git Plugin
Docker Plugin
Docker Pipeline Plugin
Pipeline Plugin
Email Extension Plugin (for notifications)
For better pipeline visualization

Testing the Setup
1. Manual Build Test
bash# In Jenkins job, click "Build Now"
# Check console output for:
# - Successful GitHub checkout
# - Docker image build
# - Docker Hub push
2. Webhook Test
bash# Make a commit to your GitHub repository
git add .
git commit -m "Test Jenkins webhook"
git push origin main


 sudo usermod -aG docker jenkins
 sudo systemctl restart jenkins
 sudo -u jenkins docker images
 sudo -u jenkins docker pull farajassulai/flask-app:latest
 sudo -u jenkins docker ps -a 
sudo -u jenkins docker stop flask-app-staging flask-app-production
sudo -u jenkins docker rm -f flask-app-staging flask-app-production
sudo -u jenkins docker rmi -f  fe28d777a*
 sudo -u jenkins docker system prune -a -f
 sudo -u jenkins docker images -a